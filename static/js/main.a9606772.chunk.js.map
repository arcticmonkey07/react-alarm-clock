{"version":3,"sources":["Components/Alarm/Alarm.module.css","Components/Alarms/Alarms.module.css","Components/Wrapper/Wrapper.module.css","Context/Alert/AlertContext.js","CustomHooks/useComponentVisible.js","Components/Alarm/Alarm.js","Components/Alarms/Alarms.js","Context/Alert/AlertReducer.js","Context/types.js","Components/AlarmEditItem/AlarmEditItem.js","Components/AlarmEdit/AlarmEdit.js","Components/Wrapper/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AlertContext","createContext","useComponentVisible","initialIsVisible","useState","isComponentVisible","setIsComponentVisible","ref","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","Alarm","alarmAt","id","willWork","dispatch","useContext","className","classes","alarm_item","alarm_top","alarm_menu_button","onClick","alarm_menu_icon","icon","faEllipsisV","alarm_menu","to","alarm_middle","alarm_label","delete_icon","faTrashAlt","color","type","payload","alarm_switch","checked","onChange","htmlFor","Alarms","alarms","console","log","show","setShow","handleClose","hours","setHours","minutes","setMinutes","time","alarms_list","map","item","key","Button","faPlus","Modal","onHide","Header","closeButton","Title","Body","value","maxLength","Footer","variant","state","action","Date","now","alarm","filter","AlarmEditItem","history","useHistory","goBack","AlarmEdit","useParams","Wrapper","useReducer","AlertReducer","JSON","parse","localStorage","getItem","setItem","stringify","Provider","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a9606772.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alarm_item\":\"Alarm_alarm_item__1XUww\",\"alarm_top\":\"Alarm_alarm_top__17AMe\",\"alarm_menu_button\":\"Alarm_alarm_menu_button__sHZNy\",\"alarm_menu_icon\":\"Alarm_alarm_menu_icon__10pw7\",\"alarm_menu\":\"Alarm_alarm_menu__2mMYw\",\"alarm_middle\":\"Alarm_alarm_middle__ia0wN\",\"alarm_label\":\"Alarm_alarm_label__2ici0\",\"alarm_switch\":\"Alarm_alarm_switch__btezC\",\"delete_icon\":\"Alarm_delete_icon__2c54t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alarms_list\":\"Alarms_alarms_list__3DkxE\",\"alarm_top\":\"Alarms_alarm_top__1zCOd\",\"alarm_menu\":\"Alarms_alarm_menu__2xFnc\",\"alarm_menu_button\":\"Alarms_alarm_menu_button__1iXph\",\"alarm_menu_icon\":\"Alarms_alarm_menu_icon__3GWaY\",\"Button\":\"Alarms_Button__2axrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Wrapper_Wrapper__2juEm\"};","import {createContext} from 'react'\r\n\r\nexport const AlertContext = createContext()","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport default function useComponentVisible(initialIsVisible) {\r\n\r\n  const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible)\r\n  const ref = useRef(null)\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      setIsComponentVisible(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside, true)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, true)\r\n    }\r\n  })\r\n\r\n  return { ref, isComponentVisible, setIsComponentVisible }\r\n}","import React, {useContext} from \"react\"\r\nimport classes from './Alarm.module.css'\r\nimport {AlertContext} from \"../../Context/Alert/AlertContext\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faEllipsisV, faTrashAlt} from \"@fortawesome/free-solid-svg-icons\"\r\nimport useComponentVisible from \"../../CustomHooks/useComponentVisible\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Alarm = ({alarmAt, id, willWork}) => {\r\n\r\n  const {dispatch} = useContext(AlertContext)\r\n\r\n  const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false)\r\n\r\n  return (\r\n      <li className={classes.alarm_item}>\r\n        <div className={classes.alarm_top}>\r\n          <button\r\n            className={classes.alarm_menu_button}\r\n            onClick={() => {setIsComponentVisible(true)}}\r\n          >\r\n            <FontAwesomeIcon\r\n              className={classes.alarm_menu_icon}\r\n              icon={faEllipsisV}\r\n            />\r\n          </button>\r\n          {isComponentVisible\r\n            && (\r\n              <ul\r\n                className={classes.alarm_menu}\r\n                ref={ref}\r\n              >\r\n                <li>\r\n                  <NavLink\r\n                    className='btn btn-primary'\r\n                    to={'/alarm-edit/' + id}\r\n                    onClick={() => setIsComponentVisible(false)}\r\n                  >edit\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            )\r\n          }\r\n        </div>\r\n        <div className={classes.alarm_middle}>\r\n          <span className={classes.alarm_label}>\r\n            {alarmAt}\r\n            <FontAwesomeIcon\r\n              className={classes.delete_icon}\r\n              icon={faTrashAlt}\r\n              color='#007bff'\r\n              onClick={() => dispatch({\r\n                type: 'REMOVE_ALARM',\r\n                payload: id\r\n              })}\r\n            />\r\n          </span>\r\n          <div className={classes.alarm_switch + ' custom-control custom-switch'}>\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id={id}\r\n              checked={willWork}\r\n              onChange={() => dispatch({\r\n                type: 'TOGGLE_ALARM',\r\n                payload: id\r\n              })\r\n              }\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor={id}></label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n  )\r\n}","import React, {useContext, useState} from \"react\"\r\nimport classes from \"./Alarms.module.css\"\r\nimport {Alarm} from \"../Alarm/Alarm\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faEllipsisV, faPlus} from \"@fortawesome/free-solid-svg-icons\"\r\nimport {AlertContext} from \"../../Context/Alert/AlertContext\"\r\nimport useComponentVisible from \"../../CustomHooks/useComponentVisible\"\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\nexport const Alarms = ({alarms}) => {\r\n\r\n  console.log(alarms)\r\n\r\n  const {dispatch} = useContext(AlertContext)\r\n\r\n  const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false)\r\n\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  const [hours, setHours] = useState('')\r\n  const [minutes, setMinutes] = useState('')\r\n  const time = hours + ':' + minutes\r\n\r\n  const addAlarm = () => {\r\n    dispatch({\r\n      type: 'ADD_ALARM',\r\n      payload: time\r\n    })\r\n    setHours('')\r\n    setMinutes('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.alarm_top}>\r\n        <h1>Alarms</h1>\r\n        <button\r\n          className={classes.alarm_menu_button}\r\n          onClick={() => setIsComponentVisible(true)}\r\n        >\r\n          <FontAwesomeIcon\r\n            className={classes.alarm_menu_icon}\r\n            icon={faEllipsisV}\r\n          />\r\n        </button>\r\n\r\n        { isComponentVisible\r\n            && (\r\n                <ul\r\n                  className={classes.alarm_menu}\r\n                  ref={ref}\r\n                >\r\n                  <li>\r\n                    <button\r\n                      className='btn btn-primary'\r\n                      onClick={() => {\r\n                        dispatch({\r\n                          type: 'ENABLE_ALL_ALARMS'\r\n                        });\r\n                        setIsComponentVisible(false);\r\n                      }}\r\n                    >\r\n                      enable alarms\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      className='btn btn-primary'\r\n                      onClick={() => {\r\n                        dispatch({\r\n                          type: 'DISABLE_ALL_ALARMS'\r\n                        });\r\n                        setIsComponentVisible(false);\r\n                      }}\r\n                    >\r\n                      disable alarms\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button className='btn btn-primary' onClick={() => setIsComponentVisible(false)}>\r\n                      edit\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              )\r\n        }\r\n\r\n      </div>\r\n      <ul className={classes.alarms_list}>\r\n        {alarms.map(item => <Alarm key={item.id} {...item} /> )}\r\n      </ul>\r\n\r\n      <Button className={classes.Button} onClick={handleShow}>\r\n        <FontAwesomeIcon\r\n          icon={faPlus}\r\n        />\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Time</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input\r\n            type=\"tel\"\r\n            value={hours}\r\n            onChange={event => setHours(event.target.value)}\r\n            maxLength='2'\r\n          />\r\n          <span>:</span>\r\n          <input\r\n            type=\"tel\"\r\n            value={minutes}\r\n            onChange={event => setMinutes(event.target.value)}\r\n            maxLength='2'\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => {addAlarm(); handleClose();} }>\r\n            Add Alarm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}","import {ADD_ALARM, DISABLE_ALL_ALARMS, ENABLE_ALL_ALARMS, REMOVE_ALARM, TOGGLE_ALARM} from \"../types\"\r\n\r\nexport default function(state, action) {\r\n  switch (action.type) {\r\n    case ADD_ALARM:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: Date.now(),\r\n          alarmAt: action.payload,\r\n          willWork: false\r\n        }\r\n      ]\r\n    case TOGGLE_ALARM:\r\n      return state.map(alarm => {\r\n          if (alarm.id === action.payload) {\r\n            alarm.willWork = !alarm.willWork\r\n          }\r\n          return alarm\r\n        })\r\n    case REMOVE_ALARM:\r\n      return state.filter(alarm => {\r\n          return alarm.id !== action.payload\r\n        })\r\n    case DISABLE_ALL_ALARMS:\r\n      return state.map(alarm => {\r\n        alarm.willWork = false\r\n        return alarm\r\n      })\r\n    case ENABLE_ALL_ALARMS:\r\n      return state.map(alarm => {\r\n        alarm.willWork = true\r\n        return alarm\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}","export const ADD_ALARM = 'ADD_ALARM'\r\nexport const TOGGLE_ALARM = 'TOGGLE_ALARM'\r\nexport const REMOVE_ALARM = 'REMOVE_ALARM'\r\nexport const DISABLE_ALL_ALARMS = 'DISABLE_ALL_ALARMS'\r\nexport const ENABLE_ALL_ALARMS = 'ENABLE_ALL_ALARMS'","import React from \"react\"\r\nimport {useHistory} from \"react-router\"\r\n\r\nexport const AlarmEditItem = ({alarm}) => {\r\n  let history = useHistory()\r\n\r\n  const item = alarm[0]\r\n\r\n  console.log(item)\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => history.goBack()}>Back</button>\r\n      <h1>Time: {item.alarmAt}</h1>\r\n    </div>\r\n  )\r\n}","import React from \"react\"\r\nimport {useParams} from 'react-router'\r\nimport {AlarmEditItem} from \"../AlarmEditItem/AlarmEditItem\"\r\n\r\nexport const AlarmEdit = ({alarms}) => {\r\n  let { id } = useParams()\r\n\r\n  const alarmsRender = () => {\r\n   const alarm = alarms.filter(alarm => {\r\n      return alarm.id === +id\r\n    })\r\n    return alarm\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AlarmEditItem alarm={alarmsRender()} />\r\n    </div>\r\n  )\r\n}","import React, {useReducer, useEffect} from \"react\"\r\nimport classes from './Wrapper.module.css'\r\nimport {Alarms} from \"../Alarms/Alarms\"\r\nimport {AlertContext} from \"../../Context/Alert/AlertContext\"\r\nimport AlertReducer from \"../../Context/Alert/AlertReducer\"\r\nimport {Route, Switch} from \"react-router-dom\"\r\nimport {AlarmEdit} from \"../AlarmEdit/AlarmEdit\"\r\n\r\nexport const Wrapper = () => {\r\n  const initialState = [\r\n    {id: 1, alarmAt: '9:10', willWork: false},\r\n    {id: 2, alarmAt: '9:20', willWork: false},\r\n    {id: 3, alarmAt: '9:30', willWork: false}\r\n  ]\r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, JSON.parse(localStorage.getItem('alarms')) || initialState)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('alarms', JSON.stringify(state))\r\n  }, [state])\r\n\r\n  return (\r\n    <AlertContext.Provider value={{\r\n      dispatch\r\n    }}>\r\n      <div className={classes.Wrapper}>\r\n        <Switch>\r\n          <Route path='/' exact component={() => <Alarms alarms={state} />} />\r\n          <Route path='/alarm-edit/:id' component={() => <AlarmEdit alarms={state} />}/>\r\n        </Switch>\r\n      </div>\r\n    </AlertContext.Provider>\r\n  )\r\n}","import React from 'react'\nimport './App.css'\nimport {Wrapper} from \"./Components/Wrapper/Wrapper\"\nimport {BrowserRouter} from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <Wrapper />\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}